apply plugin: 'osgi'
apply plugin: 'maven-publish'

sourceSets {
	perfTest {
		java {
			srcDir 'java'
		}
		resources {
			srcDir 'resources'
		}
		compileClasspath = sourceSets.main.output + configurations.perfTestCompile
		runtimeClasspath = output + sourceSets.main.output + configurations.perfTestRuntime
	}
	acceptanceTest {
		java {
			srcDir 'java'
		}
		resources {
			srcDir 'resources'
		}
	}
	test {
		java {
			srcDirs = ['src/test/java', 'src/acceptanceTest/java']
		}
	}
}

configurations {
	perfTestCompile.extendsFrom compile, testCompile
	perfTestRuntime.extendsFrom runtime, perfTestCompile, testRuntime
}

jar {
	manifest {
		name = 'org.reveno.reveno-core'
		instruction 'Bundle-Vendor', 'Reveno'
		instruction 'Bundle-Description', 'Reveno: Event-Sourced transaction processing framework'
		instruction 'Bundle-DocURL', 'http://reveno.org'
	}
}

task fooJar(type: Jar) {
	manifest = osgiManifest {
		instruction 'Bundle-Vendor', 'Reveno'
	}
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
						groupId 'org.reveno'
						artifactId 'reveno-core'
						version "$revenoVersion"
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

dependencies {
	compile "it.unimi.dsi:fastutil:$fastutilVersion"
	compile "com.lmax:disruptor:$disruptorVersion"
	compile "io.protostuff:protostuff-uberjar:$protostuffVersion"
	compile "io.netty:netty-buffer:$nettyVersion"
	compile "net.bytebuddy:byte-buddy:$byteBuddyVersion"

	testCompile project(":reveno-test-model")

	acceptanceTestCompile project(":reveno-test-model")
	acceptanceTestCompile "com.google.guava:guava:$guavaVersion"
	acceptanceTestCompile "junit:junit:$junitVersion"
	acceptanceTestCompile "org.easymock:easymock:$easymockVersion"

	perfTestCompile project(":reveno-test-model")
}

idea {
	module {
		//and some extra test source dirs
		testSourceDirs += file('src/perfTest/java')
		generatedSourceDirs += file('src/perfTest/java')
		scopes.TEST.plus += [ configurations.perfTestCompile ]
	}
}